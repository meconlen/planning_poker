name: CI

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.4'
        cache: false

    - name: Verify Go version
      run: go version

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Run staticcheck
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@2025.1.1
        staticcheck ./...

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t planning-poker:test .

    - name: Test Docker image
      run: |
        # Start container in background
        docker run -d -p 8080:8080 --name test-container planning-poker:test
        
        # Wait for container to be ready
        sleep 5
        
        # Test if the server is responding
        curl -f http://localhost:8080/ || (docker logs test-container && exit 1)
        
        # Clean up
        docker stop test-container
        docker rm test-container

  documentation:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test, docker]
    steps:
    - uses: actions/checkout@v4

    - name: Install LaTeX
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-base texlive-latex-extra texlive-fonts-recommended texlive-bibtex-extra biber

    - name: Build documentation
      run: |
        cd docs
        make pdf

    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: planning-poker-documentation
        path: docs/design.pdf
        retention-days: 90

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test, docker, documentation]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.4'

    - name: Download documentation artifact
      uses: actions/download-artifact@v4
      with:
        name: planning-poker-documentation
        path: ./artifacts

    - name: Build binaries
      run: |
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -o planning-poker-linux-amd64 main.go
        GOOS=darwin GOARCH=amd64 go build -o planning-poker-darwin-amd64 main.go
        GOOS=darwin GOARCH=arm64 go build -o planning-poker-darwin-arm64 main.go
        GOOS=windows GOARCH=amd64 go build -o planning-poker-windows-amd64.exe main.go

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          planning-poker-linux-amd64
          planning-poker-darwin-amd64
          planning-poker-darwin-arm64
          planning-poker-windows-amd64.exe
          artifacts/design.pdf
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
